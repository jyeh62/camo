plugins {
	id 'org.springframework.boot' version '2.2.0.BUILD-SNAPSHOT'
	id 'war'
	id 'org.jetbrains.kotlin.jvm' version '1.3.21'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ldcc.lemp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'javax.servlet:jstl'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}
//
//task stage() {
//    dependsOn clean, bootWar
//}
//war.mustRunAfter clean
//
//task copyToLib(type: Copy) {
//    into "$buildDir/server"
//    from(configurations.compile) {
//        include "webapp-runner*"
//    }
//}
//
//stage.dependsOn(copyToLib)
//
//gradle.taskGraph.whenReady {
//	taskGraph ->
//		if (taskGraph.hasTask(stage)) {
//			test.enabled = false
//		}
//}